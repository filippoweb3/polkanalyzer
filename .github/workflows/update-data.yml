name: Update Data
on:
  schedule:
    - cron: '0 * * * *' # every hour
  workflow_dispatch: # Or manually from GitHub UI

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest,   r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('rjson')
          install.packages('dplyr')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check for existing branch
        run: |
          if [[ $(git ls-remote --heads origin refs/heads/data-update | wc -l) == "1" ]]; then
            echo deleting existing branch
            git push origin --delete data-update
          else
            echo no existing branch found
          fi

      - name: Update data
        run: |
          git branch data-update
          git checkout data-update
          source("Scripts/auto-update.R")
        shell: Rscript {0}

      - name: Commit, push and open new PR with changes (if any)
        run: |
          if [[ `git status --porcelain` ]]; then
            git commit -a -m 'data update'
            git push --set-upstream origin data-update
            gh pr create -B master -H data-update --title 'Automated data update' --body 'Automated Data Update'
          else
            echo No auction changes detected, skipping update.
          fi





